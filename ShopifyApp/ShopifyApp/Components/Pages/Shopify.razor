@page "/shopify"
@inject IJSRuntime JsRuntime
@inject IConfiguration Configuration
@inject IHttpContextAccessor HttpContextAccessor
@inject ILogger<Shopify> Logger
@rendermode InteractiveServer

<h3>Shopify</h3>
<button @onclick="SendRequestWithSessionToken">Send Request</button>

<p>@_responseMessage</p>
<script src="https://unpkg.com/@@shopify/app-bridge@2"></script>
<script src="https://unpkg.com/@@shopify/app-bridge-utils@2"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const AppBridge = window['app-bridge'];
        const createApp = AppBridge.default;
        const utils = window['app-bridge-utils'];

        const app = createApp({
            apiKey: "@_apiKey",
            shopOrigin: "@Shop"
        });

        // Globální metoda pro získání Session Tokenu při každém požadavku
        window.getNewSessionToken = function() {
            return utils.getSessionToken(app);
        };
    });
</script>

@code {
    private string? _responseMessage = string.Empty;
    private string? _apiKey;
    [SupplyParameterFromQuery] 
    public string? Shop { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _apiKey = Configuration["Shopify:ClientId"];
    }

    private async Task SendRequestWithSessionToken()
    {
        Logger.LogInformation("Click");
        var sessionToken = await JsRuntime.InvokeAsync<string>("getNewSessionToken");
        Logger.LogInformation(sessionToken);
        _responseMessage = $"Session Token: {sessionToken}";
    }

}