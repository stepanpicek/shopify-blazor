@page "/"
@using ShopifyApp.Core.Services
@using ShopifyApp.Core.Dto
@using BlazorPolaris.Actions.Button
@inject ILogger<Home> Logger
@inject IShopService ShopService
@inject IAppBridgeService AppBridgeService
@inherits AuthComponent
@rendermode InteractiveWebAssembly

<PageTitle>Home</PageTitle>
<div class="Polaris-Page Polaris-Page--fullWidth">
    <div class="Polaris-Page__Content">
        <div class="Polaris-Layout">
            <div class="Polaris-Layout__Section">
                <div class="Polaris-LegacyCard">
                    <div class="Polaris-LegacyCard__Header Polaris-LegacyCard__FirstSectionPadding">
                        @if(_isLoading)
                        {
                            <div class="Polaris-SkeletonBodyText__SkeletonBodyTextContainer">
                                <div class="Polaris-SkeletonBodyText">
                                </div>
                                <div class="Polaris-SkeletonBodyText">
                                </div>
                                <div class="Polaris-SkeletonBodyText">
                                </div>
                            </div>
                        }
                        else
                        {
                            <h2 class="Polaris-Text--root Polaris-Text--headingSm">Welcome @_shopInfo?.ShopName!</h2>
                            <p>Name: @_shopInfo?.Owner</p>
                            <p>Email: @_shopInfo?.Email</p>
                            <PolarisButton TextAlign="ButtonTextAlign.Right">
                                View detail
                            </PolarisButton>
                        }
                    </div>
                    <div class="Polaris-LegacyCard__Section Polaris-LegacyCard__LastSectionPadding">
                        
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code
{
    private bool _isLoading = true;
    private ShopInfoResponse? _shopInfo;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        try
        {
            var shop = await ShopService.GetShopAsync();
            _shopInfo = shop;
            _isLoading = false;
            
            if (AppBridgeService.IsAppBridgeInitialized())
            {
                await AppBridgeService.NavigateAsync("/subscription");
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error while getting shop info");
        }
    }
}
